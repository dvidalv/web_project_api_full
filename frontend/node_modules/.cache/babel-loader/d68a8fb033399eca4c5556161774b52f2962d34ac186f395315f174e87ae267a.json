{"ast":null,"code":"export const BASE_URL = 'https://register.nomoreparties.co';\nlet isLoggedIn = false;\nexport const getIsLoggedIn = () => isLoggedIn;\nexport const setIsLoggedIn = value => {\n  return isLoggedIn = value;\n};\n\n// Registrar un nuevo usuario\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    return response.json();\n  });\n};\n\n//login and get token\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => response.json());\n};\n\n// comprueba el token la validez del token\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.json());\n};","map":{"version":3,"names":["BASE_URL","isLoggedIn","getIsLoggedIn","setIsLoggedIn","value","register","password","email","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","authorize","checkToken","token","Authorization","res"],"sources":["/Users/dvidalv/Dev/web_project_api_full/frontend/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://register.nomoreparties.co';\n\nlet isLoggedIn = false;\nexport const getIsLoggedIn = () => isLoggedIn;\nexport const setIsLoggedIn = (value) => {\n\treturn (isLoggedIn = value);\n};\n\n// Registrar un nuevo usuario\nexport const register = (password, email) => {\n\treturn fetch(`${BASE_URL}/signup`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({ password, email }),\n\t}).then((response) => {\n\t\treturn response.json();\n\t});\n};\n\n//login and get token\nexport const authorize = (password, email) => {\n\treturn fetch(`${BASE_URL}/signin`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({ password, email }),\n\t}).then((response) => response.json());\n};\n\n// comprueba el token la validez del token\nexport const checkToken = (token) => {\n\treturn fetch(`${BASE_URL}/users/me`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`,\n\t\t},\n\t})\n\t\t.then((res) => res.json())\n};\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,mCAAmC;AAE3D,IAAIC,UAAU,GAAG,KAAK;AACtB,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAMD,UAAU;AAC7C,OAAO,MAAME,aAAa,GAAIC,KAAK,IAAK;EACvC,OAAQH,UAAU,GAAGG,KAAK;AAC3B,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC5C,OAAOC,KAAK,CAAE,GAAER,QAAS,SAAQ,EAAE;IAClCS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACRC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IACjB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEC;IAAM,CAAC;EACzC,CAAC,CAAC,CAACQ,IAAI,CAAEC,QAAQ,IAAK;IACrB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;EACvB,CAAC,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAGA,CAACZ,QAAQ,EAAEC,KAAK,KAAK;EAC7C,OAAOC,KAAK,CAAE,GAAER,QAAS,SAAQ,EAAE;IAClCS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACRC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IACjB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEC;IAAM,CAAC;EACzC,CAAC,CAAC,CAACQ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;AACvC,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAIC,KAAK,IAAK;EACpC,OAAOZ,KAAK,CAAE,GAAER,QAAS,WAAU,EAAE;IACpCS,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACRC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE,kBAAkB;MAClCU,aAAa,EAAG,UAASD,KAAM;IAChC;EACD,CAAC,CAAC,CACAL,IAAI,CAAEO,GAAG,IAAKA,GAAG,CAACL,IAAI,CAAC,CAAC,CAAC;AAC5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}