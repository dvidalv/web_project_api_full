{"ast":null,"code":"import Main from'./Main';import Header from'./Header';import Footer from'./Footer';import{useEffect,useState,useCallback}from'react';import{Route,Switch,useHistory}from'react-router-dom';import{CurrentUserContext}from'../contexts/CurrentUserContext';import EditProfilePopup from'./EditProfilePopup';import EditAvatarPopup from'./EditAvatarPopup';import api from'../utils/api';import AddPlacePopup from'./AddPlacePopup';import DeletePopup from'./DeletePopup';import Login from'./Login';import Register from'./Register';import ProtectedRoute from'./ProtectedRoute';import{checkToken}from'../utils/auth';import{AnimatePresence}from'framer-motion';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const history=useHistory();const[cards,setCards]=useState([]);const[currentUser,setCurrentUser]=useState({});const[isEditProfilePopupOpen,setIsEditProfilePopupOpen]=useState(false);const[isAddPlacePopupOpen,setIsAddPlacePopupOpen]=useState(false);const[isEditAvatarPopupOpen,setIsEditAvatarPopupOpen]=useState(false);const[selectedCard,setSelectedCard]=useState({});const[isDeletePopupOpen,setIsDeletePopupOpen]=useState(false);const[cardToDelete,setCardToDelete]=useState({});const[loggedIn,setLoggedIn]=useState(false);const[isLoading,setIsLoading]=useState(true);const[message,setMessage]=useState('');const[isMobileOpen,setIsMobileOpen]=useState(false);const[token,setToken]=useState('');// Obtener las tarjetas\nconst fetchCards=useCallback(async token=>{try{const cards=await api.getInitialCards(token);setCards(cards);}catch(err){// console.log(err);\n}},[token]);// Dependencies of useCallback\n// Verificar el token\nuseEffect(()=>{setIsLoading(true);const tokenCheck=async()=>{let shouldRedirectToHome=false;// Variable local para controlar la redirección\nconst token=localStorage.getItem('token');if(token){try{const tokenIsValid=await checkToken(token);if(tokenIsValid){const{user}=tokenIsValid;console.log(user);setToken(token);setLoggedIn(true);shouldRedirectToHome=true;// Actualiza la variable basada en el resultado\nsetCurrentUser(user);fetchCards(token);}else{setLoggedIn(false);}}catch(error){console.error(error);setLoggedIn(false);}finally{setIsLoading(false);// Redirigir basado en el resultado de la operación asíncrona\nif(shouldRedirectToHome){history.push('/');}else{history.push('/signin');}}}else{setLoggedIn(false);setIsLoading(false);history.push('/signin');// Redirige si no hay token\n}};tokenCheck();},[history,fetchCards,setLoggedIn,setCurrentUser,setToken]);// Cerrar sesión\nconst cerrarSesion=()=>{localStorage.removeItem('token');setLoggedIn(false);setCurrentUser({});setIsMobileOpen(false);history.push('/signin');};async function handleCardLike(card){// Verifica una vez más si a esta tarjeta ya le han dado like\nconst isLiked=card.likes.some(i=>i===currentUser._id);console.log(isLiked);try{const newCard=await api.changeLikeCardStatus(card._id,!isLiked,token);console.log(newCard);setCards(state=>state.map(c=>c._id===card._id?newCard:c));}catch(error){console.log(error);}}const handleCardDelete=async card=>{try{await api.deleteCard('cards',card._id,token);setCards(cards=>cards.filter(c=>c._id!==card._id));}catch(err){console.log(err);}closeAllPopups();};const handleDeleteClick=card=>{setCardToDelete(card);setIsDeletePopupOpen(true);};const handleCardClick=card=>{document.body.style.overflow='hidden';setSelectedCard(card);};const handleEditAvatarClick=()=>{setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);};const handleProfileClick=()=>{setIsEditProfilePopupOpen(!isEditProfilePopupOpen);};const handleAddPlaceClick=()=>{setIsAddPlacePopupOpen(!isAddPlacePopupOpen);};const closeAllPopups=()=>{document.body.style.overflow='auto';setIsEditProfilePopupOpen(false);setIsAddPlacePopupOpen(false);setIsEditAvatarPopupOpen(false);setSelectedCard({});setIsDeletePopupOpen(false);};const handleUpdateUser=async userData=>{try{const updatedUser=await api.patchUserInfo(userData,token);setCurrentUser(updatedUser.user);}catch(error){console.log(error);}closeAllPopups();};// Function to handle the avatar update\nconst handleUpdateAvatar=async avatar=>{try{const updateAvatar=await api.setUserAvatar(avatar,token);// console.log(updateAvatar);\nsetCurrentUser(updateAvatar.user);}catch(error){console.log(error);}closeAllPopups();};// Function to handle the submission of a new place\nconst handleAddPlaceSubmit=async card=>{try{// Call the API to add the new card\nconst newCard=await api.addCard(card,token);// Update the state of cards by adding the new card to the existing list\nsetCards([newCard,...cards]);}catch(error){// Log any error that occurs during the process\nconsole.log(error);}// Close all popups after the card has been added\ncloseAllPopups();};if(isLoading){return'Loading...';}return/*#__PURE__*/_jsx(\"div\",{className:\"page__content\",children:/*#__PURE__*/_jsxs(CurrentUserContext.Provider,{value:{currentUser,cardToDelete,loggedIn,isMobileOpen,setIsMobileOpen,setToken},children:[/*#__PURE__*/_jsx(Header,{onCerrarSession:cerrarSesion}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/signup\",children:/*#__PURE__*/_jsx(Register,{message:message,setMessage:setMessage})}),/*#__PURE__*/_jsx(Route,{path:\"/signin\",children:/*#__PURE__*/_jsx(Login,{setLoggedIn:setLoggedIn,message:message,setMessage:setMessage})}),/*#__PURE__*/_jsx(ProtectedRoute,{loggedIn:loggedIn,path:\"/\",component:Main,cards:cards,onCardLike:handleCardLike,onCardClick:handleCardClick,onDeleteClick:handleDeleteClick,isDeletePopupOpen:isDeletePopupOpen,onEditPerfil:handleProfileClick,onEditAvatar:handleEditAvatarClick,onAddPlace:handleAddPlaceClick,selectedCard:selectedCard,closePopupImage:closeAllPopups})]}),/*#__PURE__*/_jsx(Footer,{}),/*#__PURE__*/_jsxs(AnimatePresence,{children:[isEditProfilePopupOpen&&/*#__PURE__*/_jsx(EditProfilePopup,{// This is necessary to make the component re-mount every time it opens\nisOpen:isEditProfilePopupOpen,onClose:closeAllPopups,onUpdateUser:handleUpdateUser},\"editProfilePopup\"),isEditAvatarPopupOpen&&/*#__PURE__*/_jsx(EditAvatarPopup,{isOpen:isEditAvatarPopupOpen,onClose:closeAllPopups,onUpdateAvatar:handleUpdateAvatar},\"editAvatarPopup\"),isAddPlacePopupOpen&&/*#__PURE__*/_jsx(AddPlacePopup,{isOpen:isAddPlacePopupOpen,onClose:closeAllPopups,onAddPlaceSubmit:handleAddPlaceSubmit},\"addPlacePopup\"),isDeletePopupOpen&&/*#__PURE__*/_jsx(DeletePopup,{isOpen:isDeletePopupOpen,onClose:closeAllPopups,onCardDelete:handleCardDelete},\"deletePopup\")]})]})});}export default App;","map":{"version":3,"names":["Main","Header","Footer","useEffect","useState","useCallback","Route","Switch","useHistory","CurrentUserContext","EditProfilePopup","EditAvatarPopup","api","AddPlacePopup","DeletePopup","Login","Register","ProtectedRoute","checkToken","AnimatePresence","jsx","_jsx","jsxs","_jsxs","App","history","cards","setCards","currentUser","setCurrentUser","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","isDeletePopupOpen","setIsDeletePopupOpen","cardToDelete","setCardToDelete","loggedIn","setLoggedIn","isLoading","setIsLoading","message","setMessage","isMobileOpen","setIsMobileOpen","token","setToken","fetchCards","getInitialCards","err","tokenCheck","shouldRedirectToHome","localStorage","getItem","tokenIsValid","user","console","log","error","push","cerrarSesion","removeItem","handleCardLike","card","isLiked","likes","some","i","_id","newCard","changeLikeCardStatus","state","map","c","handleCardDelete","deleteCard","filter","closeAllPopups","handleDeleteClick","handleCardClick","document","body","style","overflow","handleEditAvatarClick","handleProfileClick","handleAddPlaceClick","handleUpdateUser","userData","updatedUser","patchUserInfo","handleUpdateAvatar","avatar","updateAvatar","setUserAvatar","handleAddPlaceSubmit","addCard","className","children","Provider","value","onCerrarSession","path","component","onCardLike","onCardClick","onDeleteClick","onEditPerfil","onEditAvatar","onAddPlace","closePopupImage","isOpen","onClose","onUpdateUser","onUpdateAvatar","onAddPlaceSubmit","onCardDelete"],"sources":["/Users/dvidalv/Dev/web_project_api_full/frontend/src/components/App.js"],"sourcesContent":["import Main from './Main';\nimport Header from './Header';\nimport Footer from './Footer';\nimport { useEffect, useState, useCallback } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport api from '../utils/api';\nimport AddPlacePopup from './AddPlacePopup';\nimport DeletePopup from './DeletePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport { checkToken } from '../utils/auth';\nimport { AnimatePresence } from 'framer-motion';\n\nfunction App() {\n  const history = useHistory();\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [isDeletePopupOpen, setIsDeletePopupOpen] = useState(false);\n  const [cardToDelete, setCardToDelete] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [message, setMessage] = useState('');\n  const [isMobileOpen, setIsMobileOpen] = useState(false);\n  const [token, setToken] = useState('');\n\n  // Obtener las tarjetas\n  const fetchCards = useCallback(\n    async (token) => {\n      try {\n        const cards = await api.getInitialCards(token);\n        setCards(cards);\n      } catch (err) {\n        // console.log(err);\n      }\n    },\n    [token]\n  ); // Dependencies of useCallback\n\n  // Verificar el token\n  useEffect(() => {\n    setIsLoading(true);\n    const tokenCheck = async () => {\n      let shouldRedirectToHome = false; // Variable local para controlar la redirección\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const tokenIsValid = await checkToken(token);\n          if (tokenIsValid) {\n            const { user } = tokenIsValid;\n            console.log(user);\n            setToken(token);\n            setLoggedIn(true);\n            shouldRedirectToHome = true; // Actualiza la variable basada en el resultado\n            setCurrentUser(user);\n            fetchCards(token);\n          } else {\n            setLoggedIn(false);\n          }\n        } catch (error) {\n          console.error(error);\n          setLoggedIn(false);\n        } finally {\n          setIsLoading(false);\n          // Redirigir basado en el resultado de la operación asíncrona\n          if (shouldRedirectToHome) {\n            history.push('/');\n          } else {\n            history.push('/signin');\n          }\n        }\n      } else {\n        setLoggedIn(false);\n        setIsLoading(false);\n        history.push('/signin'); // Redirige si no hay token\n      }\n    };\n    tokenCheck();\n  }, [history, fetchCards, setLoggedIn, setCurrentUser, setToken]);\n\n  // Cerrar sesión\n  const cerrarSesion = () => {\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n    setCurrentUser({});\n    setIsMobileOpen(false);\n    history.push('/signin');\n  };\n\n  async function handleCardLike(card) {\n    // Verifica una vez más si a esta tarjeta ya le han dado like\n    const isLiked = card.likes.some((i) => i === currentUser._id);\n    console.log(isLiked);\n\n    try {\n      const newCard = await api.changeLikeCardStatus(card._id, !isLiked, token);\n      console.log(newCard);\n      setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const handleCardDelete = async (card) => {\n    try {\n      await api.deleteCard('cards', card._id, token);\n\n      setCards((cards) => cards.filter((c) => c._id !== card._id));\n    } catch (err) {\n      console.log(err);\n    }\n    closeAllPopups();\n  };\n\n  const handleDeleteClick = (card) => {\n    setCardToDelete(card);\n    setIsDeletePopupOpen(true);\n  };\n\n  const handleCardClick = (card) => {\n    document.body.style.overflow = 'hidden';\n    setSelectedCard(card);\n  };\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  };\n\n  const handleProfileClick = () => {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  };\n\n  const closeAllPopups = () => {\n    document.body.style.overflow = 'auto';\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n    setIsDeletePopupOpen(false);\n  };\n\n  const handleUpdateUser = async (userData) => {\n    try {\n      const updatedUser = await api.patchUserInfo(userData, token);\n      setCurrentUser(updatedUser.user);\n    } catch (error) {\n      console.log(error);\n    }\n    closeAllPopups();\n  };\n\n  // Function to handle the avatar update\n  const handleUpdateAvatar = async (avatar) => {\n    try {\n      const updateAvatar = await api.setUserAvatar(avatar, token);\n      // console.log(updateAvatar);\n\n      setCurrentUser(updateAvatar.user);\n    } catch (error) {\n      console.log(error);\n    }\n    closeAllPopups();\n  };\n\n  // Function to handle the submission of a new place\n  const handleAddPlaceSubmit = async (card) => {\n    try {\n      // Call the API to add the new card\n      const newCard = await api.addCard(card, token);\n      // Update the state of cards by adding the new card to the existing list\n      setCards([newCard, ...cards]);\n    } catch (error) {\n      // Log any error that occurs during the process\n      console.log(error);\n    }\n    // Close all popups after the card has been added\n    closeAllPopups();\n  };\n\n  if (isLoading) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className=\"page__content\">\n      <CurrentUserContext.Provider\n        value={{\n          currentUser,\n          cardToDelete,\n          loggedIn,\n          isMobileOpen,\n          setIsMobileOpen,\n          setToken,\n        }}\n      >\n        <Header onCerrarSession={cerrarSesion} />\n        <Switch>\n          <Route path=\"/signup\">\n            <Register message={message} setMessage={setMessage} />\n          </Route>\n          <Route path=\"/signin\">\n            <Login\n              setLoggedIn={setLoggedIn}\n              message={message}\n              setMessage={setMessage}\n            />\n          </Route>\n          <ProtectedRoute\n            loggedIn={loggedIn}\n            path=\"/\"\n            component={Main}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardClick={handleCardClick}\n            onDeleteClick={handleDeleteClick}\n            isDeletePopupOpen={isDeletePopupOpen}\n            onEditPerfil={handleProfileClick}\n            onEditAvatar={handleEditAvatarClick}\n            onAddPlace={handleAddPlaceClick}\n            selectedCard={selectedCard}\n            closePopupImage={closeAllPopups}\n          />\n        </Switch>\n        <Footer />\n        <AnimatePresence>\n          {isEditProfilePopupOpen && (\n            <EditProfilePopup\n              key=\"editProfilePopup\" // This is necessary to make the component re-mount every time it opens\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n            />\n          )}\n          {isEditAvatarPopupOpen && (\n            <EditAvatarPopup\n              key=\"editAvatarPopup\"\n              isOpen={isEditAvatarPopupOpen}\n              onClose={closeAllPopups}\n              onUpdateAvatar={handleUpdateAvatar}\n            />\n          )}\n          {isAddPlacePopupOpen && (\n            <AddPlacePopup\n              key=\"addPlacePopup\"\n              isOpen={isAddPlacePopupOpen}\n              onClose={closeAllPopups}\n              onAddPlaceSubmit={handleAddPlaceSubmit}\n            />\n          )}\n          {isDeletePopupOpen && (\n            <DeletePopup\n              key=\"deletePopup\"\n              isOpen={isDeletePopupOpen}\n              onClose={closeAllPopups}\n              onCardDelete={handleCardDelete}\n            />\n          )}\n        </AnimatePresence>\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}