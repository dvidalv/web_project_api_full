{"ast":null,"code":"var _jsxFileName = \"/Users/dvidalv/Dev/web_project_api_full/frontend/src/components/App.js\",\n  _s = $RefreshSig$();\nimport Main from './Main';\nimport Header from './Header';\nimport Footer from './Footer';\nimport { useEffect, useState, useCallback } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport api from '../utils/api';\nimport AddPlacePopup from './AddPlacePopup';\nimport DeletePopup from './DeletePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport { checkToken } from '../utils/auth';\nimport { AnimatePresence } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const history = useHistory();\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [isDeletePopupOpen, setIsDeletePopupOpen] = useState(false);\n  const [cardToDelete, setCardToDelete] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [message, setMessage] = useState('');\n  const [isMobileOpen, setIsMobileOpen] = useState(false);\n  const [token, setToken] = useState('');\n\n  // Obtener las tarjetas\n  const fetchCards = useCallback(async token => {\n    try {\n      const cards = await api.getInitialCards(token);\n      setCards(cards);\n    } catch (err) {\n      // console.log(err);\n    }\n  }, [token]); // Dependencies of useCallback\n\n  // Verificar el token\n  useEffect(() => {\n    setIsLoading(true);\n    const tokenCheck = async () => {\n      let shouldRedirectToHome = false; // Variable local para controlar la redirección\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const tokenIsValid = await checkToken(token);\n          if (tokenIsValid) {\n            const {\n              user\n            } = tokenIsValid;\n            // console.log(user);\n            setToken(token);\n            setLoggedIn(true);\n            shouldRedirectToHome = true; // Actualiza la variable basada en el resultado\n            setCurrentUser(user);\n            fetchCards(token);\n          } else {\n            setLoggedIn(false);\n          }\n        } catch (error) {\n          console.error(error);\n          setLoggedIn(false);\n        } finally {\n          setIsLoading(false);\n          // Redirigir basado en el resultado de la operación asíncrona\n          if (shouldRedirectToHome) {\n            history.push('/');\n          } else {\n            history.push('/users/signin');\n          }\n        }\n      } else {\n        setLoggedIn(false);\n        setIsLoading(false);\n        history.push('/users/signin'); // Redirige si no hay token\n      }\n    };\n    tokenCheck();\n  }, [history, fetchCards, setLoggedIn, setCurrentUser, setToken]);\n\n  // Cerrar sesión\n  const cerrarSesion = () => {\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n    setCurrentUser({});\n    setIsMobileOpen(false);\n    history.push('/users/signin');\n  };\n  async function handleCardLike(card) {\n    // Verifica una vez más si a esta tarjeta ya le han dado like\n    const isLiked = card.likes.some(i => i === currentUser._id);\n    console.log(isLiked);\n    try {\n      const newCard = await api.changeLikeCardStatus(card._id, !isLiked, token);\n      console.log(newCard);\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const handleCardDelete = async card => {\n    try {\n      await api.deleteCard('cards', card._id, token);\n      setCards(cards => cards.filter(c => c._id !== card._id));\n    } catch (err) {\n      console.log(err);\n    }\n    closeAllPopups();\n  };\n  const handleDeleteClick = card => {\n    setCardToDelete(card);\n    setIsDeletePopupOpen(true);\n  };\n  const handleCardClick = card => {\n    document.body.style.overflow = 'hidden';\n    setSelectedCard(card);\n  };\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  };\n  const handleProfileClick = () => {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  };\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  };\n  const closeAllPopups = () => {\n    document.body.style.overflow = 'auto';\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n    setIsDeletePopupOpen(false);\n  };\n  const handleUpdateUser = async userData => {\n    try {\n      const updatedUser = await api.patchUserInfo(userData, token);\n      setCurrentUser(updatedUser.user);\n    } catch (error) {\n      console.log(error);\n    }\n    closeAllPopups();\n  };\n\n  // Function to handle the avatar update\n  const handleUpdateAvatar = async avatar => {\n    try {\n      const updateAvatar = await api.setUserAvatar(avatar, token);\n      // console.log(updateAvatar);\n\n      setCurrentUser(updateAvatar.user);\n    } catch (error) {\n      console.log(error);\n    }\n    closeAllPopups();\n  };\n\n  // Function to handle the submission of a new place\n  const handleAddPlaceSubmit = async card => {\n    try {\n      // Call the API to add the new card\n      const newCard = await api.addCard(card, token);\n      // Update the state of cards by adding the new card to the existing list\n      setCards([newCard, ...cards]);\n    } catch (error) {\n      // Log any error that occurs during the process\n      console.log(error);\n    }\n    // Close all popups after the card has been added\n    closeAllPopups();\n  };\n  if (isLoading) {\n    return 'Loading...';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page__content\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: {\n        currentUser,\n        cardToDelete,\n        loggedIn,\n        isMobileOpen,\n        setIsMobileOpen,\n        setToken\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onCerrarSession: cerrarSesion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/users/signup\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            message: message,\n            setMessage: setMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/users/signin\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            setLoggedIn: setLoggedIn,\n            message: message,\n            setMessage: setMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          loggedIn: loggedIn,\n          path: \"/\",\n          component: Main,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardClick: handleCardClick,\n          onDeleteClick: handleDeleteClick,\n          isDeletePopupOpen: isDeletePopupOpen,\n          onEditPerfil: handleProfileClick,\n          onEditAvatar: handleEditAvatarClick,\n          onAddPlace: handleAddPlaceClick,\n          selectedCard: selectedCard,\n          closePopupImage: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: [isEditProfilePopupOpen && /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          // This is necessary to make the component re-mount every time it opens\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, \"editProfilePopup\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), isEditAvatarPopupOpen && /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, \"editAvatarPopup\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), isAddPlacePopupOpen && /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlaceSubmit: handleAddPlaceSubmit\n        }, \"addPlacePopup\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), isDeletePopupOpen && /*#__PURE__*/_jsxDEV(DeletePopup, {\n          isOpen: isDeletePopupOpen,\n          onClose: closeAllPopups,\n          onCardDelete: handleCardDelete\n        }, \"deletePopup\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bnfPxDHyEIZ2fCZ04tBHXNLwevY=\", false, function () {\n  return [useHistory];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Main","Header","Footer","useEffect","useState","useCallback","Route","Switch","useHistory","CurrentUserContext","EditProfilePopup","EditAvatarPopup","api","AddPlacePopup","DeletePopup","Login","Register","ProtectedRoute","checkToken","AnimatePresence","jsxDEV","_jsxDEV","App","_s","history","cards","setCards","currentUser","setCurrentUser","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","isDeletePopupOpen","setIsDeletePopupOpen","cardToDelete","setCardToDelete","loggedIn","setLoggedIn","isLoading","setIsLoading","message","setMessage","isMobileOpen","setIsMobileOpen","token","setToken","fetchCards","getInitialCards","err","tokenCheck","shouldRedirectToHome","localStorage","getItem","tokenIsValid","user","error","console","push","cerrarSesion","removeItem","handleCardLike","card","isLiked","likes","some","i","_id","log","newCard","changeLikeCardStatus","state","map","c","handleCardDelete","deleteCard","filter","closeAllPopups","handleDeleteClick","handleCardClick","document","body","style","overflow","handleEditAvatarClick","handleProfileClick","handleAddPlaceClick","handleUpdateUser","userData","updatedUser","patchUserInfo","handleUpdateAvatar","avatar","updateAvatar","setUserAvatar","handleAddPlaceSubmit","addCard","className","children","Provider","value","onCerrarSession","fileName","_jsxFileName","lineNumber","columnNumber","path","component","onCardLike","onCardClick","onDeleteClick","onEditPerfil","onEditAvatar","onAddPlace","closePopupImage","isOpen","onClose","onUpdateUser","onUpdateAvatar","onAddPlaceSubmit","onCardDelete","_c","$RefreshReg$"],"sources":["/Users/dvidalv/Dev/web_project_api_full/frontend/src/components/App.js"],"sourcesContent":["import Main from './Main';\nimport Header from './Header';\nimport Footer from './Footer';\nimport { useEffect, useState, useCallback } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport api from '../utils/api';\nimport AddPlacePopup from './AddPlacePopup';\nimport DeletePopup from './DeletePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport { checkToken } from '../utils/auth';\nimport { AnimatePresence } from 'framer-motion';\n\nfunction App() {\n  const history = useHistory();\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [isDeletePopupOpen, setIsDeletePopupOpen] = useState(false);\n  const [cardToDelete, setCardToDelete] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [message, setMessage] = useState('');\n  const [isMobileOpen, setIsMobileOpen] = useState(false);\n  const [token, setToken] = useState('');\n\n  // Obtener las tarjetas\n  const fetchCards = useCallback(\n    async (token) => {\n      try {\n        const cards = await api.getInitialCards(token);\n        setCards(cards);\n      } catch (err) {\n        // console.log(err);\n      }\n    },\n    [token]\n  ); // Dependencies of useCallback\n\n  // Verificar el token\n  useEffect(() => {\n    setIsLoading(true);\n    const tokenCheck = async () => {\n      let shouldRedirectToHome = false; // Variable local para controlar la redirección\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const tokenIsValid = await checkToken(token);\n          if (tokenIsValid) {\n            const { user } = tokenIsValid;\n            // console.log(user);\n            setToken(token);\n            setLoggedIn(true);\n            shouldRedirectToHome = true; // Actualiza la variable basada en el resultado\n            setCurrentUser(user);\n            fetchCards(token);\n          } else {\n            setLoggedIn(false);\n          }\n        } catch (error) {\n          console.error(error);\n          setLoggedIn(false);\n        } finally {\n          setIsLoading(false);\n          // Redirigir basado en el resultado de la operación asíncrona\n          if (shouldRedirectToHome) {\n            history.push('/');\n          } else {\n            history.push('/users/signin');\n          }\n        }\n      } else {\n        setLoggedIn(false);\n        setIsLoading(false);\n        history.push('/users/signin'); // Redirige si no hay token\n      }\n    };\n    tokenCheck();\n  }, [history, fetchCards, setLoggedIn, setCurrentUser, setToken]);\n\n  // Cerrar sesión\n  const cerrarSesion = () => {\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n    setCurrentUser({});\n    setIsMobileOpen(false);\n    history.push('/users/signin');\n  };\n\n  async function handleCardLike(card) {\n    // Verifica una vez más si a esta tarjeta ya le han dado like\n    const isLiked = card.likes.some((i) => i === currentUser._id);\n    console.log(isLiked);\n\n    try {\n      const newCard = await api.changeLikeCardStatus(card._id, !isLiked, token);\n      console.log(newCard);\n      setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const handleCardDelete = async (card) => {\n    try {\n      await api.deleteCard('cards', card._id, token);\n\n      setCards((cards) => cards.filter((c) => c._id !== card._id));\n    } catch (err) {\n      console.log(err);\n    }\n    closeAllPopups();\n  };\n\n  const handleDeleteClick = (card) => {\n    setCardToDelete(card);\n    setIsDeletePopupOpen(true);\n  };\n\n  const handleCardClick = (card) => {\n    document.body.style.overflow = 'hidden';\n    setSelectedCard(card);\n  };\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  };\n\n  const handleProfileClick = () => {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  };\n\n  const closeAllPopups = () => {\n    document.body.style.overflow = 'auto';\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n    setIsDeletePopupOpen(false);\n  };\n\n  const handleUpdateUser = async (userData) => {\n    try {\n      const updatedUser = await api.patchUserInfo(userData, token);\n      setCurrentUser(updatedUser.user);\n    } catch (error) {\n      console.log(error);\n    }\n    closeAllPopups();\n  };\n\n  // Function to handle the avatar update\n  const handleUpdateAvatar = async (avatar) => {\n    try {\n      const updateAvatar = await api.setUserAvatar(avatar, token);\n      // console.log(updateAvatar);\n\n      setCurrentUser(updateAvatar.user);\n    } catch (error) {\n      console.log(error);\n    }\n    closeAllPopups();\n  };\n\n  // Function to handle the submission of a new place\n  const handleAddPlaceSubmit = async (card) => {\n    try {\n      // Call the API to add the new card\n      const newCard = await api.addCard(card, token);\n      // Update the state of cards by adding the new card to the existing list\n      setCards([newCard, ...cards]);\n    } catch (error) {\n      // Log any error that occurs during the process\n      console.log(error);\n    }\n    // Close all popups after the card has been added\n    closeAllPopups();\n  };\n\n  if (isLoading) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className=\"page__content\">\n      <CurrentUserContext.Provider\n        value={{\n          currentUser,\n          cardToDelete,\n          loggedIn,\n          isMobileOpen,\n          setIsMobileOpen,\n          setToken,\n        }}\n      >\n        <Header onCerrarSession={cerrarSesion} />\n        <Switch>\n          <Route path=\"/users/signup\">\n            <Register message={message} setMessage={setMessage} />\n          </Route>\n          <Route path=\"/users/signin\">\n            <Login\n              setLoggedIn={setLoggedIn}\n              message={message}\n              setMessage={setMessage}\n            />\n          </Route>\n          <ProtectedRoute\n            loggedIn={loggedIn}\n            path=\"/\"\n            component={Main}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardClick={handleCardClick}\n            onDeleteClick={handleDeleteClick}\n            isDeletePopupOpen={isDeletePopupOpen}\n            onEditPerfil={handleProfileClick}\n            onEditAvatar={handleEditAvatarClick}\n            onAddPlace={handleAddPlaceClick}\n            selectedCard={selectedCard}\n            closePopupImage={closeAllPopups}\n          />\n        </Switch>\n        <Footer />\n        <AnimatePresence>\n          {isEditProfilePopupOpen && (\n            <EditProfilePopup\n              key=\"editProfilePopup\" // This is necessary to make the component re-mount every time it opens\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n            />\n          )}\n          {isEditAvatarPopupOpen && (\n            <EditAvatarPopup\n              key=\"editAvatarPopup\"\n              isOpen={isEditAvatarPopupOpen}\n              onClose={closeAllPopups}\n              onUpdateAvatar={handleUpdateAvatar}\n            />\n          )}\n          {isAddPlacePopupOpen && (\n            <AddPlacePopup\n              key=\"addPlacePopup\"\n              isOpen={isAddPlacePopupOpen}\n              onClose={closeAllPopups}\n              onAddPlaceSubmit={handleAddPlaceSubmit}\n            />\n          )}\n          {isDeletePopupOpen && (\n            <DeletePopup\n              key=\"deletePopup\"\n              isOpen={isDeletePopupOpen}\n              onClose={closeAllPopups}\n              onCardDelete={handleCardDelete}\n            />\n          )}\n        </AnimatePresence>\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}