{"ast":null,"code":"// export const BASE_URL = 'localhost:3000';\nimport url from'../utils/constants';export const BASE_URL=url;// Registrar un nuevo usuario\nexport const register=(name,about,avatar,email,password)=>{return fetch(\"\".concat(BASE_URL,\"/users/signup\"),{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json'},body:JSON.stringify({name,about,avatar,email,password})}).then(response=>response.json()).then(res=>{return res;});// .catch((err) => console.log(err));\n};//login and get token\nexport const authorize=(email,password)=>{return fetch(\"\".concat(BASE_URL,\"/users/signin\"),{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json'},body:JSON.stringify({email,password})}).then(response=>{if(!response.ok){throw new Error('Network response was not ok');}return response.json();}).then(res=>{return res.token;}).catch(error=>{console.error('There has been a problem with your fetch operation:',error);});};// comprueba el token la validez del token\nexport const checkToken=async token=>{// console.log('token', token);\ntry{const response=await fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json',authorization:\"Bearer \".concat(token)}});if(!response.ok){// Aquí puedes manejar diferentes códigos de estado específicos si es necesario\nthrow new Error(\"Network response was not ok: \".concat(response.status));}return await response.json();}catch(error){console.error('There has been a problem with your fetch operation:',error);// Considerar lanzar el error o manejarlo según sea necesario\n}};","map":{"version":3,"names":["url","BASE_URL","register","name","about","avatar","email","password","fetch","concat","method","headers","Accept","body","JSON","stringify","then","response","json","res","authorize","ok","Error","token","catch","error","console","checkToken","authorization","status"],"sources":["/Users/dvidalv/Dev/web_project_api_full/frontend/src/utils/auth.js"],"sourcesContent":["// export const BASE_URL = 'localhost:3000';\nimport url from '../utils/constants';\nexport const BASE_URL = url;\n\n// Registrar un nuevo usuario\nexport const register = (name, about, avatar, email, password) => {\n  return fetch(`${BASE_URL}/users/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ name, about, avatar, email, password }),\n  })\n    .then((response) => response.json())\n    .then((res) => {\n      return res;\n    });\n  // .catch((err) => console.log(err));\n};\n\n//login and get token\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/users/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  })\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then((res) => {\n      return res.token;\n    })\n    .catch((error) => {\n      console.error(\n        'There has been a problem with your fetch operation:',\n        error\n      );\n    });\n};\n\n// comprueba el token la validez del token\nexport const checkToken = async (token) => {\n  // console.log('token', token);\n  try {\n    const response = await fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${token}`,\n      },\n    });\n    if (!response.ok) {\n      // Aquí puedes manejar diferentes códigos de estado específicos si es necesario\n      throw new Error(`Network response was not ok: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('There has been a problem with your fetch operation:', error);\n    // Considerar lanzar el error o manejarlo según sea necesario\n  }\n};\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,GAAG,KAAM,oBAAoB,CACpC,MAAO,MAAM,CAAAC,QAAQ,CAAGD,GAAG,CAE3B;AACA,MAAO,MAAM,CAAAE,QAAQ,CAAGA,CAACC,IAAI,CAAEC,KAAK,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,GAAK,CAChE,MAAO,CAAAC,KAAK,IAAAC,MAAA,CAAIR,QAAQ,kBAAiB,CACvCS,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACPC,MAAM,CAAE,kBAAkB,CAC1B,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEZ,IAAI,CAAEC,KAAK,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAC/D,CAAC,CAAC,CACCS,IAAI,CAAEC,QAAQ,EAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,GAAG,EAAK,CACb,MAAO,CAAAA,GAAG,CACZ,CAAC,CAAC,CACJ;AACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,SAAS,CAAGA,CAACd,KAAK,CAAEC,QAAQ,GAAK,CAC5C,MAAO,CAAAC,KAAK,IAAAC,MAAA,CAAIR,QAAQ,kBAAiB,CACvCS,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACPC,MAAM,CAAE,kBAAkB,CAC1B,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAET,KAAK,CAAEC,QAAS,CAAC,CAC1C,CAAC,CAAC,CACCS,IAAI,CAAEC,QAAQ,EAAK,CAClB,GAAI,CAACA,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAChD,CACA,MAAO,CAAAL,QAAQ,CAACC,IAAI,CAAC,CAAC,CACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,GAAG,EAAK,CACb,MAAO,CAAAA,GAAG,CAACI,KAAK,CAClB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,EAAK,CAChBC,OAAO,CAACD,KAAK,CACX,qDAAqD,CACrDA,KACF,CAAC,CACH,CAAC,CAAC,CACN,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,UAAU,CAAG,KAAO,CAAAJ,KAAK,EAAK,CACzC;AACA,GAAI,CACF,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAT,KAAK,IAAAC,MAAA,CAAIR,QAAQ,cAAa,CACnDS,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACPC,MAAM,CAAE,kBAAkB,CAC1B,cAAc,CAAE,kBAAkB,CAClCgB,aAAa,WAAAnB,MAAA,CAAYc,KAAK,CAChC,CACF,CAAC,CAAC,CACF,GAAI,CAACN,QAAQ,CAACI,EAAE,CAAE,CAChB;AACA,KAAM,IAAI,CAAAC,KAAK,iCAAAb,MAAA,CAAiCQ,QAAQ,CAACY,MAAM,CAAE,CAAC,CACpE,CACA,MAAO,MAAM,CAAAZ,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOO,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,qDAAqD,CAAEA,KAAK,CAAC,CAC3E;AACF,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}