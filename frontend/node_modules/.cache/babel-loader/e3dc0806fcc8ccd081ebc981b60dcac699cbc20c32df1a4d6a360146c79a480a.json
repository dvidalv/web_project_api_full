{"ast":null,"code":"// export const BASE_URL = 'localhost:3000';\n\nexport const BASE_URL = 'https://api.alrededorusa.mooo.com';\n\n// Registrar un nuevo usuario\nexport const register = (name, about, avatar, email, password) => {\n  return fetch(`${BASE_URL}/users/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      about,\n      avatar,\n      email,\n      password\n    })\n  }).then(response => response.json()).then(res => {\n    return res;\n  });\n  // .catch((err) => console.log(err));\n};\n\n//login and get token\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/users/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).then(res => {\n    return res.token;\n  }).catch(error => {\n    console.error('There has been a problem with your fetch operation:', error);\n  });\n};\n\n// comprueba el token la validez del token\nexport const checkToken = async token => {\n  // console.log('token', token);\n  try {\n    const response = await fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      // Aquí puedes manejar diferentes códigos de estado específicos si es necesario\n      throw new Error(`Network response was not ok: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('There has been a problem with your fetch operation:', error);\n    // Considerar lanzar el error o manejarlo según sea necesario\n  }\n};","map":{"version":3,"names":["BASE_URL","register","name","about","avatar","email","password","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","res","authorize","ok","Error","token","catch","error","console","checkToken","authorization","status"],"sources":["/Users/dvidalv/Dev/web_project_api_full/frontend/src/utils/auth.js"],"sourcesContent":["// export const BASE_URL = 'localhost:3000';\n\nexport const BASE_URL = 'https://api.alrededorusa.mooo.com';\n\n// Registrar un nuevo usuario\nexport const register = (name, about, avatar, email, password) => {\n  return fetch(`${BASE_URL}/users/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ name, about, avatar, email, password }),\n  })\n    .then((response) => response.json())\n    .then((res) => {\n      return res;\n    });\n  // .catch((err) => console.log(err));\n};\n\n//login and get token\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/users/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  })\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then((res) => {\n      return res.token;\n    })\n    .catch((error) => {\n      console.error(\n        'There has been a problem with your fetch operation:',\n        error\n      );\n    });\n};\n\n// comprueba el token la validez del token\nexport const checkToken = async (token) => {\n  // console.log('token', token);\n  try {\n    const response = await fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${token}`,\n      },\n    });\n    if (!response.ok) {\n      // Aquí puedes manejar diferentes códigos de estado específicos si es necesario\n      throw new Error(`Network response was not ok: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('There has been a problem with your fetch operation:', error);\n    // Considerar lanzar el error o manejarlo según sea necesario\n  }\n};\n"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,QAAQ,GAAG,mCAAmC;;AAE3D;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EAChE,OAAOC,KAAK,CAAE,GAAEP,QAAS,eAAc,EAAE;IACvCQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEX,IAAI;MAAEC,KAAK;MAAEC,MAAM;MAAEC,KAAK;MAAEC;IAAS,CAAC;EAC/D,CAAC,CAAC,CACCQ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,GAAG,IAAK;IACb,OAAOA,GAAG;EACZ,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAGA,CAACb,KAAK,EAAEC,QAAQ,KAAK;EAC5C,OAAOC,KAAK,CAAE,GAAEP,QAAS,eAAc,EAAE;IACvCQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CACCQ,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAI,CAACA,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAOL,QAAQ,CAACC,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,GAAG,IAAK;IACb,OAAOA,GAAG,CAACI,KAAK;EAClB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CACX,qDAAqD,EACrDA,KACF,CAAC;EACH,CAAC,CAAC;AACN,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAG,MAAOJ,KAAK,IAAK;EACzC;EACA,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMR,KAAK,CAAE,GAAEP,QAAS,WAAU,EAAE;MACnDQ,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE,kBAAkB;QAClCgB,aAAa,EAAG,UAASL,KAAM;MACjC;IACF,CAAC,CAAC;IACF,IAAI,CAACN,QAAQ,CAACI,EAAE,EAAE;MAChB;MACA,MAAM,IAAIC,KAAK,CAAE,gCAA+BL,QAAQ,CAACY,MAAO,EAAC,CAAC;IACpE;IACA,OAAO,MAAMZ,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;IAC3E;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}