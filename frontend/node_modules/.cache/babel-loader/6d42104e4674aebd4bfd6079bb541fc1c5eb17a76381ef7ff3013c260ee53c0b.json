{"ast":null,"code":"const token = '9d080c9f-32ec-43d7-9e8d-be1fdad6fe1b';\nclass Api {\n  constructor() {\n    this.groupId = 'web_es_09';\n    this._token = token;\n    this._url = `https://around.nomoreparties.co/v1/${this.groupId}/`;\n  }\n  async fetchData(url, method, data) {\n    try {\n      const result = await fetch(`${url}`, {\n        method,\n        headers: {\n          authorization: this._token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (result.ok) {\n        return await result.json();\n      }\n      return await Promise.reject(`Error: ${result.status}`);\n    } catch (error) {\n      throw error;\n    }\n  }\n  async getUserInfo() {\n    return await this.fetchData(`${this._url}users/me`, 'GET');\n  }\n  async getInitialCards(resource) {\n    return await this.fetchData(`${this._url}${resource}`, 'GET');\n  }\n  async getUserAvatar(resource) {\n    return await this.fetchData(`${this._url}${resource}`);\n  }\n  async setUserAvatar(data) {\n    return await this.fetchData(`${this._url}users/me/avatar`, 'PATCH', data);\n  }\n  async patchUserInfo(data) {\n    return await this.fetchData(`${this._url}users/me`, 'PATCH', data);\n  }\n  async addCard(data) {\n    return await this.fetchData(`${this._url}cards`, 'POST', data);\n  }\n  async deleteCard(resource, card_Id) {\n    return await this.fetchData(`${this._url}${resource}/${card_Id}`, 'DELETE');\n  }\n  async dislikeCard(resource, card_Id) {\n    return await this.fetchData(`${this._url}${resource}/${card_Id}`, 'DELETE');\n  }\n  async changeLikeCardStatus(id, isLike) {\n    return await this.fetchData(`${this._url}cards/likes/${id}`, isLike ? 'PUT' : 'DELETE');\n  }\n}\nconst api = new Api();\nexport default api;","map":{"version":3,"names":["token","Api","constructor","groupId","_token","_url","fetchData","url","method","data","result","fetch","headers","authorization","body","JSON","stringify","ok","json","Promise","reject","status","error","getUserInfo","getInitialCards","resource","getUserAvatar","setUserAvatar","patchUserInfo","addCard","deleteCard","card_Id","dislikeCard","changeLikeCardStatus","id","isLike","api"],"sources":["/Users/dvidalv/Dev/web_project_around_auth/src/utils/api.js"],"sourcesContent":["const token = '9d080c9f-32ec-43d7-9e8d-be1fdad6fe1b';\n\nclass Api {\n\tconstructor() {\n\t\tthis.groupId = 'web_es_09';\n\t\tthis._token = token;\n\t\tthis._url = `https://around.nomoreparties.co/v1/${this.groupId}/`;\n\t}\n\tasync fetchData(url, method, data) {\n\t\ttry {\n\t\t\tconst result = await fetch(`${url}`, {\n\t\t\t\tmethod,\n\t\t\t\theaders: {\n\t\t\t\t\tauthorization: this._token,\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data),\n\t\t\t});\n\n\t\t\tif (result.ok) {\n\t\t\t\treturn await result.json();\n\t\t\t}\n\n\t\t\treturn await Promise.reject(`Error: ${result.status}`);\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\t\n\tasync getUserInfo() {\n\t\treturn await this.fetchData(`${this._url}users/me`, 'GET');\n\t}\n\t\n\tasync getInitialCards(resource) {\n\t\treturn await this.fetchData(`${this._url}${resource}`, 'GET');\n\t}\n\n\n\tasync getUserAvatar(resource) {\n\t\treturn await this.fetchData(`${this._url}${resource}`);\n\t}\n\tasync setUserAvatar(data) {\n\t\treturn await this.fetchData(`${this._url}users/me/avatar`, 'PATCH', data);\n\t}\n\n\tasync patchUserInfo(data) {\n\t\treturn await this.fetchData(`${this._url}users/me`, 'PATCH', data);\n\t}\n\tasync addCard(data) {\n\t\treturn await this.fetchData(`${this._url}cards`, 'POST', data);\n\t}\n\n\tasync deleteCard(resource, card_Id) {\n\t\treturn await this.fetchData(`${this._url}${resource}/${card_Id}`, 'DELETE');\n\t}\n\n\tasync dislikeCard(resource, card_Id) {\n\t\treturn await this.fetchData(`${this._url}${resource}/${card_Id}`, 'DELETE');\n\t}\n\tasync changeLikeCardStatus(id, isLike) {\n\t\treturn await this.fetchData(\n\t\t\t`${this._url}cards/likes/${id}`,\n\t\t\tisLike ? 'PUT' : 'DELETE'\n\t\t);\n\t}\n}\nconst api = new Api();\n\nexport default api;\n"],"mappings":"AAAA,MAAMA,KAAK,GAAG,sCAAsC;AAEpD,MAAMC,GAAG,CAAC;EACTC,WAAWA,CAAA,EAAG;IACb,IAAI,CAACC,OAAO,GAAG,WAAW;IAC1B,IAAI,CAACC,MAAM,GAAGJ,KAAK;IACnB,IAAI,CAACK,IAAI,GAAI,sCAAqC,IAAI,CAACF,OAAQ,GAAE;EAClE;EACA,MAAMG,SAASA,CAACC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAE;IAClC,IAAI;MACH,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,EAAC,EAAE;QACpCC,MAAM;QACNI,OAAO,EAAE;UACRC,aAAa,EAAE,IAAI,CAACT,MAAM;UAC1B,cAAc,EAAE;QACjB,CAAC;QACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;MAC1B,CAAC,CAAC;MAEF,IAAIC,MAAM,CAACO,EAAE,EAAE;QACd,OAAO,MAAMP,MAAM,CAACQ,IAAI,CAAC,CAAC;MAC3B;MAEA,OAAO,MAAMC,OAAO,CAACC,MAAM,CAAE,UAASV,MAAM,CAACW,MAAO,EAAC,CAAC;IACvD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACf,MAAMA,KAAK;IACZ;EACD;EAEA,MAAMC,WAAWA,CAAA,EAAG;IACnB,OAAO,MAAM,IAAI,CAACjB,SAAS,CAAE,GAAE,IAAI,CAACD,IAAK,UAAS,EAAE,KAAK,CAAC;EAC3D;EAEA,MAAMmB,eAAeA,CAACC,QAAQ,EAAE;IAC/B,OAAO,MAAM,IAAI,CAACnB,SAAS,CAAE,GAAE,IAAI,CAACD,IAAK,GAAEoB,QAAS,EAAC,EAAE,KAAK,CAAC;EAC9D;EAGA,MAAMC,aAAaA,CAACD,QAAQ,EAAE;IAC7B,OAAO,MAAM,IAAI,CAACnB,SAAS,CAAE,GAAE,IAAI,CAACD,IAAK,GAAEoB,QAAS,EAAC,CAAC;EACvD;EACA,MAAME,aAAaA,CAAClB,IAAI,EAAE;IACzB,OAAO,MAAM,IAAI,CAACH,SAAS,CAAE,GAAE,IAAI,CAACD,IAAK,iBAAgB,EAAE,OAAO,EAAEI,IAAI,CAAC;EAC1E;EAEA,MAAMmB,aAAaA,CAACnB,IAAI,EAAE;IACzB,OAAO,MAAM,IAAI,CAACH,SAAS,CAAE,GAAE,IAAI,CAACD,IAAK,UAAS,EAAE,OAAO,EAAEI,IAAI,CAAC;EACnE;EACA,MAAMoB,OAAOA,CAACpB,IAAI,EAAE;IACnB,OAAO,MAAM,IAAI,CAACH,SAAS,CAAE,GAAE,IAAI,CAACD,IAAK,OAAM,EAAE,MAAM,EAAEI,IAAI,CAAC;EAC/D;EAEA,MAAMqB,UAAUA,CAACL,QAAQ,EAAEM,OAAO,EAAE;IACnC,OAAO,MAAM,IAAI,CAACzB,SAAS,CAAE,GAAE,IAAI,CAACD,IAAK,GAAEoB,QAAS,IAAGM,OAAQ,EAAC,EAAE,QAAQ,CAAC;EAC5E;EAEA,MAAMC,WAAWA,CAACP,QAAQ,EAAEM,OAAO,EAAE;IACpC,OAAO,MAAM,IAAI,CAACzB,SAAS,CAAE,GAAE,IAAI,CAACD,IAAK,GAAEoB,QAAS,IAAGM,OAAQ,EAAC,EAAE,QAAQ,CAAC;EAC5E;EACA,MAAME,oBAAoBA,CAACC,EAAE,EAAEC,MAAM,EAAE;IACtC,OAAO,MAAM,IAAI,CAAC7B,SAAS,CACzB,GAAE,IAAI,CAACD,IAAK,eAAc6B,EAAG,EAAC,EAC/BC,MAAM,GAAG,KAAK,GAAG,QAClB,CAAC;EACF;AACD;AACA,MAAMC,GAAG,GAAG,IAAInC,GAAG,CAAC,CAAC;AAErB,eAAemC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}